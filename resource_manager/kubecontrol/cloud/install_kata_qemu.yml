---
- hosts: clouds
  become: true
  tasks:
    - name: Install kata-qemu
      shell: |
        wget https://github.com/kata-containers/kata-containers/releases/download/3.1.3/kata-static-3.1.3-x86_64.tar.xz
        xzcat kata-static-3.1.3-x86_64.tar.xz | sudo tar -xvf - -C /
        sudo ln -s /opt/kata/bin/kata-runtime /usr/local/bin
        rm kata-static-3.1.3-x86_64.tar.xz

        file_path='/etc/containerd/config.toml'

        echo '#!/bin/bash' | sudo tee -a /usr/local/bin/containerd-shim-kata-qemu-v2 > /dev/null
        echo 'KATA_CONF_FILE=/opt/kata/share/defaults/kata-containers/configuration-qemu.toml /opt/kata/bin/containerd-shim-kata-v2 $@' | sudo tee -a /usr/local/bin/containerd-shim-kata-qemu-v2 > /dev/null

        sudo chmod +x /usr/local/bin/containerd-shim-kata-qemu-v2

        line_number=$(grep -n 'containerd.runtimes]' "$file_path" | cut -d ":" -f 1)

        sed -i "$((line_number + 1)) a\         [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.kata-qemu]" "$file_path"
        sed -i "$((line_number + 2)) a\           runtime_type = \"io.containerd.kata-qemu.v2\"\n" "$file_path"

        sudo systemctl restart containerd

    - name: Install tracing tools
      shell: |
        sudo snap install docker

    - name: Enable kata tracing
      shell: |
        # removes the comment from the runtime enable_tracing parameter in the configurations.
        sudo sed -i '588s/#//' /opt/kata/share/defaults/kata-containers/configuration-qemu.toml

    - name: start tracing daemon
      shell: |
        sudo docker run -d --name jaeger \
          -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \
          -e COLLECTOR_OTLP_ENABLED=true \
          -p 6831:6831/udp \
          -p 6832:6832/udp \
          -p 5778:5778 \
          -p 16686:16686 \
          -p 4317:4317 \
          -p 4318:4318 \
          -p 14250:14250 \
          -p 14268:14268 \
          -p 14269:14269 \
          -p 9411:9411 \
          jaegertracing/all-in-one:1.47

    - name: create resetTracesFile
      shell: |
        cat > "/home/{{ username }}/resetTraces.sh" <<EOF
        #!/bin/bash
        sudo docker stop \"$(sudo docker ps -aq)\"
        sudo docker rm \"$(sudo docker ps -aq)\"
        sudo docker run -d --name jaeger \
          -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \
          -e COLLECTOR_OTLP_ENABLED=true \
          -p 6831:6831/udp \
          -p 6832:6832/udp \
          -p 5778:5778 \
          -p 16686:16686 \
          -p 4317:4317 \
          -p 4318:4318 \
          -p 14250:14250 \
          -p 14268:14268 \
          -p 14269:14269 \
          -p 9411:9411 \
          jaegertracing/all-in-one:1.47
        EOF
        chmod +x "/home/{{ username }}/resetTraces.sh"

    - name: Create dev tools file
      shell: |
        cat > "/home/{{ username }}/install_dev_tools.py" <<EOF
        import subprocess
        import os
        subprocess.run("sudo apt install zsh neovim tree -y", shell=True)
        subprocess.run("mkdir -p ~/.config/nvim/pack/tpope/start", shell=True)
        subprocess.run("git clone https://github.com/tpope/vim-surround.git ~/.config/nvim/pack/tpope/start/vim-surround", shell=True)
        subprocess.run("git clone https://github.com/tpope/vim-commentary.git ~/.config/nvim/pack/tpope/start/vim-commentary", shell=True)
        subprocess.run("git clone https://github.com/tpope/vim-unimpaired.git ~/.config/nvim/pack/tpope/start/vim-unimpaired", shell=True)
        subprocess.run("git clone https://github.com/tpope/vim-repeat.git ~/.config/nvim/pack/tpope/start/vim-repeat", shell=True)
        subprocess.run("git clone https://github.com/tpope/vim-eunuch.git ~/.config/nvim/pack/tpope/start/vim-eunuch", shell=True)
        f_path = os.path.expanduser('.config/nvim/init.vim')
        with open(f_path, "w") as f:
            f.write("""
        set number t_Co=256 scrolloff=7 ts=4 sts=4 sw=4 expandtab nowrap ignorecase smartcase
        filetype on
        syntax enable
        autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
        let mapleader = ","
        noremap \ ,
        nnoremap <Leader>w :w!<CR>
        nnoremap <Leader>q :q<CR>
        nmap <C-j> <C-W>j
        nmap <C-k> <C-W>k
        nmap <C-h> <C-W>h
        nmap <C-l> <C-W>l
        nnoremap <silent> <esc> :silent noh<CR>
        command! W execute 'w !sudo tee % > /dev/null' <bar> edit!
        augroup highlight_yank
            autocmd!
            au TextYankPost * silent! lua vim.highlight.on_yank { higroup='IncSearch', timeout=250 }
        augroup END
        tnoremap <ESC> <C-\><C-n>
        tnoremap <C-v><ESC> <ESC>
        """)
        subprocess.run('wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh', shell=True)
        subprocess.run('chmod +x install.sh', shell=True)
        EOF

        cat > "/home/{{ username }}/.bash_history" <<EOF
        python3.8 install_dev_tools.py
        ./install.sh
        EOF

    - name: create extra dev files
      shell: |
        cat > "/home/{{ username }}/kata-fc.sh" <<EOF
        #!/bin/bash
        sudo sed -i 's/snapshotter = \"overlayfs\"/snapshotter = \"devmapper\"/g' /etc/containerd/config.toml
        sudo systemctl restart containerd
        EOF
        chmod +x "/home/{{ username }}/kata-fc.sh"

        cat > "/home/{{ username }}/kata-qemu.sh" <<EOF
        #!/bin/bash
        sudo sed -i 's/snapshotter = \"devmapper\"/snapshotter = \"overlayfs\"/g' /etc/containerd/config.toml
        sudo systemctl restart containerd
        EOF
        chmod +x "/home/{{ username }}/kata-qemu.sh"

        cat > "/home/{{ username }}/configure_zsh.sh" <<EOF
        #!/bin/bash
        sed -i 's/plugins=(git)/plugins=(git sudo)/' ~/.zshrc
        sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="pmcgee"/' ~/.zshrc
        EOF
        chmod +x "/home/{{ username }}/configure_zsh.sh"
